- name: config_pgcluster.yml | Configure PostgreSQL Cluster
  when: "'primary' in group_names"
  environment: '{{ proxy_env | default({}) }}'
  block:
    - name: Build a firewall_ports_dynamic_var
      ansible.builtin.set_fact:
        firewall_ports_dynamic_var: '{{ firewall_ports_dynamic_var | default([]) + (firewall_allowed_tcp_ports_for[item] | default([])) }}'
      loop: '{{ hostvars[inventory_hostname].group_names }}'
      when: firewall_enabled_at_boot | bool
      tags: config_firewall, firewall

    - name: Build a firewall_rules_dynamic_var
      ansible.builtin.set_fact:
        firewall_rules_dynamic_var: '{{ firewall_rules_dynamic_var | default([]) + (firewall_additional_rules_for[item] | default([])) }}'
      loop: '{{ hostvars[inventory_hostname].group_names }}'
      when: firewall_enabled_at_boot | bool
      tags: firewall

    # if 'dcs_type' is 'consul'
    - name: Add a nameserver entry poining to localhost for dnsmasq
      ansible.builtin.set_fact:
        nameservers: "{{ ['127.0.0.1'] + (nameservers | default([])) }}"
      when: dcs_type == "consul" and consul_dnsmasq_enable | bool and ('127.0.0.1' not in (nameservers | default([])))

    - name: ansible-role-firewall
      ansible.builtin.include_role:
        name: ansible-role-firewall
      vars:
        firewall_allowed_tcp_ports: '{{ firewall_ports_dynamic_var | default([]) | unique }}'
        firewall_additional_rules: '{{ firewall_rules_dynamic_var | default([]) | unique }}'
      when: firewall_enabled_at_boot | bool
      tags: firewall

    - name: hostname
      ansible.builtin.include_role:
        name: hostname

    - name: resolv_conf
      ansible.builtin.include_role:
        name: resolv_conf

    - name: etc_hosts
      ansible.builtin.include_role:
        name: etc_hosts

    - name: timezone
      ansible.builtin.include_role:
        name: timezone

    - name: add-repository
      ansible.builtin.include_role:
        name: add-repository

    - name: packages
      ansible.builtin.include_role:
        name: packages

    - name: sudo
      ansible.builtin.include_role:
        name: sudo

    - name: swap
      ansible.builtin.include_role:
        name: swap

    - name: sysctl
      ansible.builtin.include_role:
        name: sysctl

    - name: transparent_huge_pages
      ansible.builtin.include_role:
        name: transparent_huge_pages

    - name: pam_limits
      ansible.builtin.include_role:
        name: pam_limits

    - name: io-scheduler
      ansible.builtin.include_role:
        name: io-scheduler

    - name: locales
      ansible.builtin.include_role:
        name: locales

    - name: ntp
      ansible.builtin.include_role:
        name: ntp

    - name: ssh-keys
      ansible.builtin.include_role:
        name: ssh-keys

    - name: copy
      ansible.builtin.include_role:
        name: copy

    - name: pgpass
      ansible.builtin.include_role:
        name: pgpass

    - name: cron
      ansible.builtin.include_role:
        name: cron

    - name: patroni/config
      ansible.builtin.include_role:
        name: patroni/config

    - name: pgbouncer/config
      when: pgbouncer_install | bool
      ansible.builtin.include_role:
        name: patroni/config

    - name: vip-manager
      when: not with_haproxy_load_balancing | bool and
        (cluster_vip is defined and cluster_vip | length > 0)
      ansible.builtin.include_role:
        name: vip-manager

    - name: postgresql-users
      when: inventory_hostname in groups['primary']
      ansible.builtin.include_role:
        name: postgresql-users

    - name: postgresql-users
      when: inventory_hostname in groups['primary']
      ansible.builtin.include_role:
        name: postgresql-users

    - name: postgresql-databases
      when: inventory_hostname in groups['primary']
      ansible.builtin.include_role:
        name: postgresql-databases

    - name: postgresql-schemas
      when: inventory_hostname in groups['primary']
      ansible.builtin.include_role:
        name: postgresql-schemas

    - name: postgresql-privs
      when: inventory_hostname in groups['primary']
      ansible.builtin.include_role:
        name: postgresql-privs

    - name: wal-g
      when: wal_g_install | bool
      ansible.builtin.include_role:
        name: postgresql-databases
